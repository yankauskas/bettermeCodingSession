ext {
    versionName = '1.0.0'

    // Android X
    androidKtxVer = '1.3.2'
    fragmentVer = '1.2.5'
    appCompatVer = '1.2.0'
    materialVer = '1.2.1'
    recyclerViewVer = '1.1.0'
    constraintLayoutVer = '2.0.4'
    browserVer = '1.2.0'
    workManagerVer = '2.4.0'
    swipeRefreshLayoutVer = '1.1.0'

    // Coroutines
    coroutinesVer = '1.4.0'

    // Architecture components
    roomVer = '2.2.5'
    lifecycleVer = "2.2.0"

    // DI
    javaXInjectVer = '1'
    daggerVer = '2.40.5'

    // Reactive Extensions
    rxJava2Ver = '2.2.20'
    rxAndroid2Ver = '2.1.1'

    // Networking
    okHttpVer = '4.9.0'
    retrofitVer = '2.9.0'

    // Moshi
    moshiVer = '1.11.0'

    // Images
    glideVer = '4.11.0'
    glideTransformationsVer = '4.3.0'

    // Developer-related
    timberVer = '4.7.1'
    leakCanaryVer = '2.5'
    stethoVer = '1.5.1'
    chuckerVer = '3.3.0'
    threeTenABPVer = '1.3.0'
    threeTenJvmVer = '1.5.0' //For testing purposes only

    // Unit-tests
    jUnitVer = '4.13.1'
    mockitoVer = '3.6.0'
    mockitoKotlinVer = '2.2.0'
    assertJVer = '3.18.0'
    jupiterVer = '5.7.0'

    // Instrumentation tests
    runnerVer = '1.3.0'
    espressoCoreVer = '3.3.0'
    annotationsVer = '1.1.0'
    coreTestingVer = '2.1.0'
    androidXJUnitVer = '1.1.2'

    // Dependencies
    androidXDependencies = [
            appCompat           : "androidx.appcompat:appcompat:$appCompatVer",
            design              : "com.google.android.material:material:$materialVer",
            recyclerView        : "androidx.recyclerview:recyclerview:$recyclerViewVer",
            constraintLayout    : "androidx.constraintlayout:constraintlayout:$constraintLayoutVer",
            lifecycleExtensions : "androidx.lifecycle:lifecycle-extensions:$lifecycleVer",
            lifecycle           : "androidx.lifecycle:lifecycle-common-java8:$lifecycleVer",
            viewModelKtx        : "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVer",
            navigationFragment  : "androidx.navigation:navigation-fragment-ktx:$navigationComponentVer",
            navigationUi        : "androidx.navigation:navigation-ui-ktx:$navigationComponentVer",
            androidKtx          : "androidx.core:core-ktx:$androidKtxVer",
            fragmentKtx         : "androidx.fragment:fragment-ktx:$fragmentVer",
            browser             : "androidx.browser:browser:$browserVer",
            workManagerKtx      : "androidx.work:work-runtime-ktx:$workManagerVer",
            swipeRefreshlayout  : "androidx.swiperefreshlayout:swiperefreshlayout:$swipeRefreshLayoutVer"
    ]

    kotlinDependencies = [
            kotlinStdLib        : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVer",
            coroutinesCore      : "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVer",
            coroutinesAndroid : "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVer"
    ]

    developmentDependencies = [
            timber            : "com.jakewharton.timber:timber:$timberVer",
            leakCanary  : "com.squareup.leakcanary:leakcanary-android:$leakCanaryVer",
            stetho            : "com.facebook.stetho:stetho:$stethoVer",
            stethoOkHttp      : "com.facebook.stetho:stetho-okhttp3:$stethoVer",
            chucker           : "com.github.ChuckerTeam.Chucker:library:$chuckerVer",
            chuckerNoOp       : "com.github.ChuckerTeam.Chucker:library-no-op:$chuckerVer",
            threeTenABP       : "com.jakewharton.threetenabp:threetenabp:$threeTenABPVer"
    ]

    uiDependencies = [
            glide                   : "com.github.bumptech.glide:glide:$glideVer",
            glideCompiler           : "com.github.bumptech.glide:compiler:$glideVer",
            glideTransformations    : "jp.wasabeef:glide-transformations:$glideTransformationsVer"
    ]

    diDependencies = [
            javaxInject             : "javax.inject:javax.inject:$javaXInjectVer",
            dagger                  : "com.google.dagger:dagger:$daggerVer",
            daggerCompiler          : "com.google.dagger:dagger-compiler:$daggerVer",
            daggerAndroid           : "com.google.dagger:dagger-android:$daggerVer",
            daggerAndroidSupport    : "com.google.dagger:dagger-android-support:$daggerVer",
            daggerAndroidProcessor  : "com.google.dagger:dagger-android-processor:$daggerVer"
    ]

    rxDependencies = [
            rxJava               : "io.reactivex.rxjava2:rxjava:$rxJava2Ver",
            rxAndroid            : "io.reactivex.rxjava2:rxandroid:$rxAndroid2Ver"
    ]

    dataDependencies = [
            moshi                   : "com.squareup.moshi:moshi-kotlin:$moshiVer",
            okHttp                  : "com.squareup.okhttp3:okhttp:$okHttpVer",
            okHttpInterceptor       : "com.squareup.okhttp3:logging-interceptor:$okHttpVer",
            retrofit                : "com.squareup.retrofit2:retrofit:$retrofitVer",
            retrofitMoshiConverter  : "com.squareup.retrofit2:converter-moshi:$retrofitVer",
            retrofitRxJavaAdapter   : "com.squareup.retrofit2:adapter-rxjava2:$retrofitVer",
            room                    : "androidx.room:room-ktx:$roomVer",
            roomRxJava              : "androidx.room:room-rxjava2:$roomVer",
            roomCompiler            : "androidx.room:room-compiler:$roomVer"
    ]

    testDependencies = [
            jUnit                   : "junit:junit:$jUnitVer",
            mockito                 : "org.mockito:mockito-core:$mockitoVer",
            jUnitJupiter            : "org.junit.jupiter:junit-jupiter-api:$jupiterVer",
            jUnitVintage            : "org.junit.vintage:junit-vintage-engine:$jupiterVer",
            jupiterParametrized     : "org.junit.jupiter:junit-jupiter-params:$jupiterVer",
            jupiterEngine           : "org.junit.jupiter:junit-jupiter-engine:$jupiterVer",
            mockitoKotlin           : "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVer",
            assertJ                 : "org.assertj:assertj-core:$assertJVer",
            mockitoInline           : "org.mockito:mockito-inline:$mockitoVer",
            jupiterMockitoRunner    : "org.mockito:mockito-junit-jupiter:$mockitoVer",
            threeTenJvm             : "org.threeten:threetenbp:$threeTenJvmVer"
    ]

    androidTestDependencies = [
            testRunner        : "androidx.test:runner:$runnerVer",
            espressoCore      : "androidx.test.espresso:espresso-core:$espressoCoreVer",
            testRules         : "androidx.test:rules:$runnerVer",
            supportAnnotations: "androidx.annotation:annotation:$annotationsVer",
            testRoom          : "androidx.room:room-testing:$roomVer",
            testArchCore      : "androidx.arch.core:core-testing:$coreTestingVer",
            androidXJunit     : "androidx.test.ext:junit:$androidXJUnitVer",
            testWorkManager   : "androidx.work:work-testing:$workManagerVer",
            testCoroutines     : "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVer",
    ]
}